{"version":3,"sources":["Components/CommentsList/styles.module.css","Components/Navigation/styles.module.css","Components/CommentsForm/styles.module.css","app.module.css","redux/comments/comments-actions.js","redux/comments/comments-operations.js","Components/CommentsForm/CommentsForm.js","redux/comments/comments-selectors.js","Components/CommentsList/CommentsList.js","Components/Navigation/Navigation.js","App.js","redux/comments/comments-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchCommentRequest","createAction","fetchCommentSuccess","fetchCommentError","addCommentRequest","addCommentSuccess","addCommentError","axios","defaults","baseURL","fetchComments","page","dispatch","actions","get","params","then","data","catch","error","ContactForm","useState","name","setName","text","setText","useDispatch","handleChange","evt","currentTarget","value","Form","onSubmit","preventDefault","comment","console","log","JSON","stringify","post","commentsOps","Group","controlId","Label","Control","type","placeholder","onChange","required","Text","className","Button","styles","button","variant","getComments","state","comments","items","getNextPage","nextPage","getLastPage","lastPage","getTotalPage","totalPage","CommentsList","useSelector","useEffect","comment__list","map","comment__item","comment__name","comment__text","id","Navigation","nav","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","bind","this","itemClass","linkClass","nav__button","onClick","App","container","createReducer","payload","_","current_page","Boolean","next_page_url","last_page","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51c5a96b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment__list\":\"styles_comment__list__2DJRD\",\"comment__item\":\"styles_comment__item__29qP5\",\"comment__text\":\"styles_comment__text__3-62X\",\"comment__name\":\"styles_comment__name__2wzGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"styles_nav__2OtNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__i-s5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2PYZU\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchCommentRequest = createAction('comment/fetchCommentRequest');\nexport const fetchCommentSuccess = createAction('comment/fetchCommentSuccess');\nexport const fetchCommentError = createAction('comment/fetchCommentError');\n\nexport const addCommentRequest = createAction('comment/addCommentRequest');\nexport const addCommentSuccess = createAction('comment/addCommentSuccess');\nexport const addCommentError = createAction('comment/addCommentError');\n","import axios from 'axios';\nimport * as actions from './comments-actions';\n\naxios.defaults.baseURL = 'https://jordan.ashton.fashion/api/goods/30';\n\nexport const fetchComments = page => dispatch => {\n  dispatch(actions.fetchCommentRequest());\n\n  axios\n    .get('/comments', {\n      params: {\n        page: page,\n      },\n    })\n    .then(({ data }) => dispatch(actions.fetchCommentSuccess(data)))\n    .catch(error => dispatch(actions.fetchCommentError(error)));\n};\n\nexport const addComment =\n  ({ name, text }) =>\n  dispatch => {\n    const comment = {\n      name,\n      text,\n    };\n\n    console.log(JSON.stringify(comment));\n\n    dispatch(actions.addCommentRequest());\n\n    axios\n      .post('/comments', comment)\n      .then(({ data }) => dispatch(actions.addCommentSuccess(data)))\n      .catch(error => dispatch(actions.addCommentError(error)));\n  };\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './styles.module.css';\nimport * as commentsOps from '../../redux/comments/comments-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setName('');\n    setText('');\n  };\n\n  const handleChange = evt => {\n    if (evt.currentTarget.name !== 'text') {\n      setName(evt.currentTarget.value);\n    } else {\n      setText(evt.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    dispatch(commentsOps.addComment({ name, text }));\n\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        <Form.Text className=\"text-muted\"></Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Comment</Form.Label>\n        <Form.Control\n          placeholder=\"Comment\"\n          name=\"text\"\n          value={text}\n          type=\"text\"\n          onChange={handleChange}\n          required\n        />\n      </Form.Group>\n\n      <Button className={styles.button} variant=\"primary\" type=\"submit\">\n        Add comment\n      </Button>\n    </Form>\n  );\n}\n","export const getComments = state => {\n  return state.comments.items;\n};\n\nexport const getNextPage = state => {\n  return state.comments.nextPage;\n};\n\nexport const getLastPage = state => {\n  return state.comments.lastPage;\n};\n\nexport const getTotalPage = state => {\n  return state.comments.totalPage;\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './styles.module.css';\nimport { getComments } from '../../redux/comments/comments-selectors';\nimport * as commentsOps from '../../redux/comments/comments-operations';\n\nconst CommentsList = () => {\n  const dispatch = useDispatch();\n  const comments = useSelector(getComments);\n\n  useEffect(() => {\n    dispatch(commentsOps.fetchComments());\n  }, [dispatch]);\n\n  return (\n    <ul className={styles.comment__list}>\n      {comments.map(comment => {\n        return (\n          <li key={comment.id} className={styles.comment__item}>\n            <p className={styles.comment__name}>{comment.name}:</p>\n            <p className={styles.comment__text}> {comment.text}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport Pagination from 'react-js-pagination';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport styles from './styles.module.css';\nimport * as commentsOps from '../../redux/comments/comments-operations';\nimport {\n  getNextPage,\n  getLastPage,\n  getTotalPage,\n} from '../../redux/comments/comments-selectors';\n\nfunction Navigation() {\n  const page = useSelector(getNextPage);\n  const lastPage = useSelector(getLastPage);\n  const totalPage = useSelector(getTotalPage);\n  const dispatch = useDispatch();\n\n  const nextPage = page < totalPage ? page + 1 : totalPage;\n\n  const onLoadMoreBtnClick = function () {\n    dispatch(commentsOps.fetchComments(nextPage));\n  };\n\n  const onPaginateClick = function (page) {\n    dispatch(commentsOps.fetchComments(page));\n  };\n\n  return (\n    <div className={styles.nav}>\n      <Pagination\n        activePage={page}\n        itemsCountPerPage={10}\n        totalItemsCount={700}\n        pageRangeDisplayed={5}\n        onChange={onPaginateClick.bind(this)}\n        itemClass=\"page-item\"\n        linkClass=\"page-link\"\n      />\n      {lastPage && (\n        <Button\n          className={styles.nav__button}\n          onClick={onLoadMoreBtnClick}\n          variant=\"primary\"\n          type=\"button\"\n        >\n          Load more...\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport CommentsForm from './Components/CommentsForm';\nimport CommentsList from './Components/CommentsList/';\nimport Navigation from './Components/Navigation';\n\nimport styles from './app.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.container}>\n      <CommentsForm />\n      <CommentsList />\n      <Navigation />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { fetchCommentSuccess } from './comments-actions';\n\nconst items = createReducer([], {\n  [fetchCommentSuccess]: (state, { payload }) => payload.data,\n  // [addCommentSuccess]: (_, { payload }) => console.log(payload),\n});\n\nconst nextPage = createReducer(1, {\n  [fetchCommentSuccess]: (_, { payload }) => payload.current_page,\n});\n\nconst lastPage = createReducer(false, {\n  [fetchCommentSuccess]: (_, { payload }) => Boolean(payload.next_page_url),\n});\n\nconst totalPage = createReducer(1, {\n  [fetchCommentSuccess]: (_, { payload }) => payload.last_page,\n});\n\nexport default combineReducers({\n  items,\n  nextPage,\n  lastPage,\n  totalPage,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport reducer from './comments/comments-reducer';\n\nconst store = configureStore({\n  reducer: {\n    comments: reducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}